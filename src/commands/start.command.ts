import {Command} from "./command.class";
import {Telegraf} from "telegraf";
import {IBotContext} from "../context/context.interface";
import axios from "axios";
import fs from "fs";

export class StartCommand extends Command {
    job = require('node-schedule')

    constructor(bot: Telegraf<IBotContext>) {
        super(bot);
    }

    handleCompliment(chatId: number): void {
        let formData = new FormData();
        formData.append('type', 'compliment');
        formData.append('rod', 'female');
        formData.append('count', '1');

        axios.post('https://generatom.com/ajax/main', formData)
            .then((res) => {
                void this.bot.telegram.sendMessage(chatId, `${res.data[0].content.replace('\r\n', '')}‚ù§Ô∏è`)
            })
    }

    writeUserChatId(chatId: number): void {
        const data = fs.readFileSync('./file.json', {encoding: 'utf8'});
        const dataParse = JSON.parse(data)
        if (!dataParse.find((id: number) => id === chatId)) {
            fs.writeFileSync('./file.json', JSON.stringify([...dataParse, chatId]))
        } else {
            console.log('–¢–∞–∫–æ–π —é–∑–µ—Ä —É–∂–µ –µ—Å—Ç—å')
        }
    }

    handle(): void {
        this.bot.start(async (ctx) => {
            const chatId = ctx.chat.id

            await this.bot.telegram.sendMessage(chatId, "–ü—Ä–∏–≤–µ—Ç, –º–µ–Ω—è —Å–¥–µ–ª–∞–ª –ö–æ–ª—è!\n\n–Ø –Ω—É–∂–µ–Ω –¥–ª—è –æ–¥–Ω–æ–π —Ü–µ–ª–∏, —á—Ç–æ–±—ã –∫–∞–∂–¥—ã–π –¥–µ–Ω—å —Ä–∞–¥–æ–≤–∞—Ç—å —Ç–µ–±—è –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç–∞–º–∏!");
            await this.bot.telegram.sendMessage(chatId, "–ü–æ–∫–∞ —è –æ—á–µ–Ω—å –≥–ª—É–ø—ã–π –∏ —É–º–µ—é –æ–±—â–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ —Å —Ç–æ–±–æ–π ‚ù§Ô∏è\n–ù–µ –¥–µ–ª–∏—Å—å –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –º–Ω–æ–π –Ω–∏ —Å –∫–µ–º ü•∞");

            await this.handleCompliment(chatId)

            this.writeUserChatId(chatId)
        })
    }
}